{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","isValid","string","regexp","test","clear","setState","onAdd","event","preventDefault","error","target","elements","value","props","addMovie","onChangeHandler","stateKey","this","onSubmit","htmlFor","type","id","name","onChange","required","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCrBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRe,aAAa,EACbd,QAAS,GACTe,cAAc,EACdJ,OAAQ,IARZ,EAWEK,QAAU,SAACC,EAAQC,GACjB,OAAOA,EAAOC,KAAKF,IAZvB,EAeEG,MAAQ,WACN,EAAKC,SAAS,KAhBlB,EAmBEC,MAAQ,SAACC,GACPA,EAAMC,iBAEN,IAAIC,GAAQ,EAENP,EAAS,qKACf,EAA4B,EAAKL,MAAzBd,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAYhB,GAVK,EAAKgB,QAAQjB,EAAQmB,KACxB,EAAKG,SAAS,CAAEP,aAAa,IAC7BW,GAAQ,GAGL,EAAKT,QAAQhB,EAASkB,KACzB,EAAKG,SAAS,CAAEN,cAAc,IAC9BU,GAAQ,IAGNA,EAAJ,CAIA,IAAMhB,EAAQ,CACZZ,MAAO0B,EAAMG,OAAOC,SAAS9B,MAAM+B,MACnC9B,YAAayB,EAAMG,OAAOC,SAAS7B,YAAY8B,MAC/C7B,SACAC,UACAW,OAAQY,EAAMG,OAAOC,SAAShB,OAAOiB,OAGvC,EAAKC,MAAMC,SAASrB,KAjDxB,EAoDEsB,gBAAkB,SAACR,EAAOS,GACP,WAAbA,GACF,EAAKX,SAAS,CACZP,aAAa,IAIA,YAAbkB,GACF,EAAKX,SAAS,CACZN,cAAc,IAIlB,EAAKM,SAAL,eACGW,EAAWT,EAAMG,OAAOE,SAlE/B,4CAsEE,WAAU,IAAD,OACP,EAQIK,KAAKpB,MAPPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OACAG,EANF,EAMEA,YACAC,EAPF,EAOEA,aAGF,OACE,0BACEd,UAAU,aACViC,SAAUD,KAAKX,OAEf,kCACE,6CAGA,2BACEa,QAAQ,0BACRlC,UAAU,qBAFZ,aAKE,6BACA,2BACEmC,KAAK,OACLC,GAAG,0BACHC,KAAK,QACLrC,UAAU,0BACV2B,MAAO/B,EACP0C,SAAU,SAAChB,GACT,EAAKQ,gBAAgBR,EAAO,UAE9BiB,UAAQ,KAGZ,6BAEA,2BACEL,QAAQ,gCACRlC,UAAU,iCAFZ,mBAKE,6BACA,8BACEmC,KAAK,OACLC,GAAG,gCACHC,KAAK,cACLrC,UAAU,gCACV2B,MAAO9B,EACPyC,SAAU,SAAChB,GACT,EAAKQ,gBAAgBR,EAAO,mBAIlC,6BAEA,2BACEY,QAAQ,2BACRlC,UAAU,qBAFZ,iBAKE,6BACA,2BACEmC,KAAK,OACLC,GAAG,2BACHC,KAAK,SACLrC,UAAS,UAAKa,GAAe,SAApB,2CAETc,MAAO7B,EACPwC,SAAU,SAAChB,GACT,EAAKQ,gBAAgBR,EAAO,WAE9BiB,UAAQ,KAGX1B,GAEG,0BACEb,UAAU,iBADZ,6BAOJ,6BAEA,2BACEkC,QAAQ,6BACRlC,UAAU,qBAFZ,oBAKE,6BACA,2BACEmC,KAAK,OACLC,GAAG,6BACHC,KAAK,UACLrC,UAAS,UAAKc,GAAgB,SAArB,2CAETa,MAAO5B,EACPuC,SAAU,SAAChB,GACT,EAAKQ,gBAAgBR,EAAO,YAE9BiB,UAAQ,KAGXzB,GAEG,0BACEd,UAAU,iBADZ,6BAOJ,6BAEA,2BACEkC,QAAQ,4BACRlC,UAAU,qBAFZ,mBAKE,6BACA,2BACEmC,KAAK,OACLC,GAAG,4BACHC,KAAK,SACLrC,UAAU,0BACV2B,MAAOjB,EACP4B,SAAU,SAAChB,GACT,EAAKQ,gBAAgBR,EAAO,WAE9BiB,UAAQ,KAGZ,6BAEA,4BACEJ,KAAK,SACLK,SAAU3B,GAAeC,GAF3B,aAjNV,GAA8B2B,c,OCCjBC,EAAb,4MACE9B,MAAQ,CACNN,OAAQqC,GAFZ,EAKEd,SAAW,SAACrB,GACV,EAAKY,UAAS,SAAAR,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAW0B,KAAKpB,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU6B,SAAUG,KAAKH,iBApBnC,GAAyBY,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ff3f3430.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { InputFieldBlock } from '../InputFieldBlock';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imgUrlError: false,\n    imdbUrl: '',\n    imdbUrlError: false,\n    imdbId: '',\n  };\n\n  isValid = (string, regexp) => {\n    return regexp.test(string);\n  }\n\n  clear = () => {\n    this.setState({});\n  }\n\n  onAdd = (event) => {\n    event.preventDefault();\n\n    let error = false;\n    // eslint-disable-next-line\n    const regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const { imgUrl, imdbUrl } = this.state;\n\n    if (!this.isValid(imgUrl, regexp)) {\n      this.setState({ imgUrlError: true });\n      error = true;\n    }\n\n    if (!this.isValid(imdbUrl, regexp)) {\n      this.setState({ imdbUrlError: true });\n      error = true;\n    }\n\n    if (error) {\n      return;\n    }\n\n    const movie = {\n      title: event.target.elements.title.value,\n      description: event.target.elements.description.value,\n      imgUrl,\n      imdbUrl,\n      imdbId: event.target.elements.imdbId.value,\n    };\n\n    this.props.addMovie(movie);\n  }\n\n  onChangeHandler = (event, stateKey) => {\n    if (stateKey === 'imgUrl') {\n      this.setState({\n        imgUrlError: false,\n      });\n    }\n\n    if (stateKey === 'imdbUrl') {\n      this.setState({\n        imdbUrlError: false,\n      });\n    }\n\n    this.setState({\n      [stateKey]: event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      imgUrlError,\n      imdbUrlError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"movie-form\"\n        onSubmit={this.onAdd}\n      >\n        <fieldset>\n          <legend>\n            New movie\n          </legend>\n          <label\n            htmlFor=\"movie-form__title-label\"\n            className=\"movie-form__label\"\n          >\n            Title:&nbsp;\n            <br />\n            <input\n              type=\"text\"\n              id=\"movie-form__title-label\"\n              name=\"title\"\n              className=\"movie-form__input-field\"\n              value={title}\n              onChange={(event) => {\n                this.onChangeHandler(event, 'title');\n              }}\n              required\n            />\n          </label>\n          <br />\n\n          <label\n            htmlFor=\"movie-form__description-label\"\n            className=\"movie-form__description-label\"\n          >\n            Description:&nbsp;\n            <br />\n            <textarea\n              type=\"text\"\n              id=\"movie-form__description-label\"\n              name=\"description\"\n              className=\"movie-form__description-field\"\n              value={description}\n              onChange={(event) => {\n                this.onChangeHandler(event, 'description');\n              }}\n            />\n          </label>\n          <br />\n\n          <label\n            htmlFor=\"movie-form__imgurl-label\"\n            className=\"movie-form__label\"\n          >\n            Image url:&nbsp;\n            <br />\n            <input\n              type=\"text\"\n              id=\"movie-form__imgurl-label\"\n              name=\"imgUrl\"\n              className={`${imgUrlError && ' error'}\n              movie-form__input-field`}\n              value={imgUrl}\n              onChange={(event) => {\n                this.onChangeHandler(event, 'imgUrl');\n              }}\n              required\n            />\n          </label>\n          {imgUrlError\n            && (\n              <span\n                className=\"error-message\"\n              >\n                Please, enter a valid URL\n              </span>\n            )\n          }\n          <br />\n\n          <label\n            htmlFor=\"movie-form__imgdburl-label\"\n            className=\"movie-form__label\"\n          >\n            Image db url:&nbsp;\n            <br />\n            <input\n              type=\"text\"\n              id=\"movie-form__imgdburl-label\"\n              name=\"imdbUrl\"\n              className={`${imdbUrlError && ' error'}\n              movie-form__input-field`}\n              value={imdbUrl}\n              onChange={(event) => {\n                this.onChangeHandler(event, 'imdbUrl');\n              }}\n              required\n            />\n          </label>\n          {imdbUrlError\n            && (\n              <span\n                className=\"error-message\"\n              >\n                Please, enter a valid URL\n              </span>\n            )\n          }\n          <br />\n\n          <label\n            htmlFor=\"movie-form__imgdbid-label\"\n            className=\"movie-form__label\"\n          >\n            Image db id:&nbsp;\n            <br />\n            <input\n              type=\"text\"\n              id=\"movie-form__imgdbid-label\"\n              name=\"imdbId\"\n              className=\"movie-form__input-field\"\n              value={imdbId}\n              onChange={(event) => {\n                this.onChangeHandler(event, 'imdbId');\n              }}\n              required\n            />\n          </label>\n          <br />\n\n          <button\n            type=\"submit\"\n            disabled={imgUrlError || imdbUrlError}\n          >\n            Add\n          </button>\n        </fieldset>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}